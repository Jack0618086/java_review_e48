package tw.brad.e48;

public class P1_StarPyramid {
        public static void main(String[] args) {
            int n = 5; // 高度

            // 控制層數：這是金字塔的高度，一共有 n 層，每次 i 代表當前處理的是第幾層。
            // 範例：i = 1 是第一層，i = 2 是第二層，以此類推到 i = n（第五層）。
            for (int i = 1; i <= n; i++) {
                //控制空白的數量：金字塔左側的空白數量會根據層數遞減。
                //公式：每一層的空白數量 = n - i
                //第一層（i = 1）：空白數量為 n - 1 = 4
                //第二層（i = 2）：空白數量為 n - 2 = 3
                //以此類推。
                //作用：用來在每層星星的左側輸出適當數量的空白，使金字塔居中對齊。
                for (int j = 1; j <= n - i; j++) {
                    System.out.print(" ");
                }
                //控制星星與空格的輸出：每層的總寬度為 2 * i - 1。
                //第一層（i = 1）：寬度為 2 * 1 - 1 = 1
                //第二層（i = 2）：寬度為 2 * 2 - 1 = 3
                //以此類推到第五層，寬度為 9。
                for (int j = 1; j <= 2 * i - 1; j++) {
                    //判斷何時畫星星：
                    //j == 1：每層的第一個位置畫星星。
                    //j == 2 * i - 1：每層的最後一個位置畫星星。
                    //i == n：當是最後一層時（底部），所有位置都畫星星。
                    //其餘情況：輸出空格，形成中空效果
                    if (j == 1 || j == 2 * i - 1 || i == n) {
                        System.out.print("*");
                    } else {
                        System.out.print(" ");
                    }
                }
                System.out.println();
            }
        }
    }